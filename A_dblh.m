% Jacobian matrix related to d(XYZ) of check points
% Calculates A matrix for all points, and re-arranges it for selected check points
% Based on the BB matrix generated by Ali CAM, re-edited by Hüseyin Topan, April 2018, BEÜ
% Recoded by Hüseyin TOPAN (ZBEÜ), March 2024.

function B_total = A_dXYZ(icp, rpc, model_id)

Px = rpc(11 : 90);

for i = 1 : length(icp(: , 1))
    U = icp(i , 20); %latitude
    V = icp(i , 21); %longitude
    W = icp(i , 22); %height
    
    if  model_id == 81 %1st degree RFM
        f1(i) = Px(1) + Px(2)  * U + Px(3)  * V + Px(4)  * W;
        f2(i) = 1     + Px(5)  * U + Px(6)  * V + Px(7)  * W;
        f3(i) = Px(8) + Px(9)  * U + Px(10) * V + Px(11) * W;
        f4(i) = 1     + Px(12) * U + Px(13) * V + Px(14) * W;
        
        B(2 * i - 1, 1) = ((Px( 2) * f2(i) - Px( 5) * f1(i)) / f2(i)^2);
        B(2 * i - 1, 2) = ((Px( 3) * f2(i) - Px( 6) * f1(i)) / f2(i)^2);
        B(2 * i - 1, 3) = ((Px( 4) * f2(i) - Px( 7) * f1(i)) / f2(i)^2);
        B(2 * i    , 1) = ((Px( 9) * f4(i) - Px(12) * f3(i)) / f4(i)^2);
        B(2 * i    , 2) = ((Px(10) * f4(i) - Px(13) * f3(i)) / f4(i)^2);
        B(2 * i    , 3) = ((Px(11) * f4(i) - Px(12) * f3(i)) / f4(i)^2); 

    elseif  model_id == 82 %2nd degree RFM
        
        f1(i) = Px(1)  + Px(2)  * U + Px(3)  * V + Px(4)  * W + Px(5)  * U * V + Px(6)  * V * W + Px(7)  * U * W + Px(8)  * U^2 + Px(9)  * V^2 + Px(10) * W^2;
        f2(i) = 1      + Px(11) * U + Px(12) * V + Px(13) * W + Px(14) * U * V + Px(15) * V * W + Px(16) * U * W + Px(17) * U^2 + Px(18) * V^2 + Px(19) * W^2;
        f3(i) = Px(20) + Px(21) * U + Px(22) * V + Px(23) * W + Px(24) * U * V + Px(25) * V * W + Px(26) * U * W + Px(27) * U^2 + Px(28) * V^2 + Px(29) * W^2;
        f4(i) = 1      + Px(30) * U + Px(31) * V + Px(32) * W + Px(33) * U * V + Px(34) * V * W + Px(35) * U * W + Px(36) * U^2 + Px(37) * V^2 + Px(38) * W^2;
        
        B(2 * i - 1, 1) = ((Px(2)  + 2 * U * Px(8)  + V * Px(5)      + W * Px(7))      / (f2(i)) - ((Px(11) + 2 * U * Px(17) + V * Px(14)     + W * Px(16)) * (f1(i)))     / (f2(i))^2);
        B(2 * i - 1, 2) = ((Px(3)  + U *     Px(5)  + 2 * V * Px(9)  + W * Px(6))      / (f2(i)) - ((Px(12) + U * Px(14)     + 2 * V * Px(18) + W * Px(15)) * (f1(i)))     / (f2(i))^2);
        B(2 * i - 1, 3) = ((Px(4)  + U *     Px(7)  + V * Px(6)      + 2 * W * Px(10)) / (f2(i)) - ((Px(13) + U * Px(16)     + V * Px(15)     + 2 * W * Px(19)) * (f1(i))) / (f2(i))^2);
        B(2 * i    , 1) = ((Px(21) + 2 * U * Px(27) + V * Px(24)     + W * Px(26))     / (f4(i)) - ((Px(30) + 2 * U * Px(36) + V * Px(33)     + W * Px(35)) * (f3(i)))     / (f4(i))^2);
        B(2 * i    , 2) = ((Px(22) + U *     Px(24) + 2 * V * Px(28) + W * Px(25))     / (f4(i)) - ((Px(31) + U * Px(33)     + 2 * V * Px(37) + W * Px(34)) * (f3(i)))     / (f4(i))^2);
        B(2 * i    , 3) = ((Px(23) + U *     Px(26) + V * Px(25)     + 2 * W * Px(29)) / (f4(i)) - ((Px(32) + U * Px(35)     + V * Px(34)     + 2 * W * Px(38)) * (f3(i))) / (f4(i))^2);
    
    elseif  model_id == 83 %3rd degree RFM
        
        f1(i) = Px(1)  + Px(2)  * U + Px(3)  * V + Px(4)  * W + Px(5)  * U * V + Px(6)  * V * W + Px(7)  * U * W + Px(8)  * U^2 + Px(9)  * V^2 + Px(10) * W^2 + Px(11) * U * V * W + Px(12) * V^3 + Px(13) * (U^2) * V + Px(14) * V * W^2 + Px(15) * U * V^2 + Px(16) * U^3 + Px(17) * U * W^2 + Px(18) * V^2 * W + Px(19) * (U^2) * W + Px(20) * W^3;
        f2(i) = 1      + Px(21) * U + Px(22) * V + Px(23) * W + Px(24) * U * V + Px(25) * V * W + Px(26) * U * W + Px(27) * U^2 + Px(28) * V^2 + Px(29) * W^2 + Px(30) * U * V * W + Px(31) * V^3 + Px(32) * (U^2) * V + Px(33) * V * W^2 + Px(34) * U * V^2 + Px(35) * U^3 + Px(36) * U * W^2 + Px(37) * V^2 * W + Px(38) * (U^2) * W + Px(39) * W^3;
        f3(i) = Px(40) + Px(41) * U + Px(42) * V + Px(43) * W + Px(44) * U * V + Px(45) * V * W + Px(46) * U * W + Px(47) * U^2 + Px(48) * V^2 + Px(49) * W^2 + Px(50) * U * V * W + Px(51) * V^3 + Px(52) * (U^2) * V + Px(53) * V * W^2 + Px(54) * U * V^2 + Px(55) * U^3 + Px(56) * U * W^2 + Px(57) * V^2 * W + Px(58) * (U^2) * W + Px(59) * W^3;
        f4(i) = 1      + Px(60) * U + Px(61) * V + Px(62) * W + Px(63) * U * V + Px(64) * V * W + Px(65) * U * W + Px(66) * U^2 + Px(67) * V^2 + Px(68) * W^2 + Px(69) * U * V * W + Px(70) * V^3 + Px(71) * (U^2) * V + Px(72) * V * W^2 + Px(73) * U * V^2 + Px(74) * U^3 + Px(75) * U * W^2 + Px(76) * V^2 * W + Px(77) * (U^2) * W + Px(78) * W^3;

        B(2 * i - 1, 1) = ((3 * Px(16) * U^2 + 2 * Px(13) * U * V + 2 * Px(19) * U * W + 2 * Px(8) * U  + Px(15) * V^2     + Px(11) * V * W     + Px(5) * V      + Px(17) * W^2     + Px(7) * W      + Px(2) ) / (f2(i)) - ((3 * Px(35) * U^2 + 2 * Px(32) * U * V + 2 * Px(38) * U * W + 2 * Px(27) * U + Px(34) * V^2     + Px(30) * V * W     + Px(24) * V     + Px(36) * W^2     + Px(26) * W     + Px(21)) * (f1(i))) / (f2(i))^2);
        B(2 * i - 1, 2) = ((Px(13) * U^2     + 2 * Px(15) * U * V + Px(11) * U * W     + Px(5) * U      + 3 * Px(12) * V^2 + 2 * Px(18) * V * W + 2 * Px(9) * V  + Px(14) * W^2     + Px(6) * W      + Px(3) ) / (f2(i)) - ((Px(32) * U^2     + 2 * Px(34) * U * V + Px(30) * U * W     + Px(24) * U     + 3 * Px(31) * V^2 + 2 * Px(37) * V * W + 2 * Px(28) * V + Px(33) * W^2     + Px(25) * W     + Px(22)) * (f1(i))) / (f2(i))^2);
        B(2 * i - 1, 3) = ((Px(19) * U^2     + Px(11) * U * V     + 2 * Px(17) * U * W + Px(7) * U      + Px(18) * V^2     + 2 * Px(14) * V * W + Px(6) * V      + 3 * Px(20) * W^2 + 2 * Px(10) * W + Px(4) ) / (f2(i)) - ((Px(38) * U^2     + Px(30) * U * V     + 2 * Px(36) * U * W + Px(26) * U     + Px(37) * V^2     + 2 * Px(33) * V * W + Px(25) * V     + 3 * Px(39) * W^2 + 2 * Px(29) * W + Px(23)) * (f1(i))) / (f2(i))^2);
        B(2 * i    , 1) = ((3 * Px(55) * U^2 + 2 * Px(52) * U * V + 2 * Px(58) * U * W + 2 * Px(47) * U + Px(54) * V^2     + Px(50) * V * W     + Px(44) * V     + Px(56) * W^2     + Px(46) * W     + Px(41)) / (f4(i)) - ((3 * Px(74) * U^2 + 2 * Px(71) * U * V + 2 * Px(77) * U * W + 2 * Px(66) * U + Px(73) * V^2     + Px(69) * V * W     + Px(63) * V     + Px(75) * W^2     + Px(65) * W     + Px(60)) * (f3(i))) / (f4(i))^2);
        B(2 * i    , 2) = ((Px(52) * U^2     + 2 * Px(54) * U * V + Px(50) * U * W     + Px(44) * U     + 3 * Px(51) * V^2 + 2 * Px(57) * V * W + 2 * Px(48) * V + Px(53) * W^2     + Px(45) * W     + Px(42)) / (f4(i)) - ((Px(71) * U^2     + 2 * Px(73) * U * V + Px(69) * U * W     + Px(63) * U     + 3 * Px(70) * V^2 + 2 * Px(76) * V * W + 2 * Px(67) * V + Px(72) * W^2     + Px(64) * W     + Px(61)) * (f3(i))) / (f4(i))^2);
        B(2 * i    , 3) = ((Px(58) * U^2     + Px(50) * U * V     + 2 * Px(56) * U * W + Px(46) * U     + Px(57) * V^2     + 2 * Px(53) * V * W + Px(45) * V     + 3 * Px(59) * W^2 + 2 * Px(49) * W + Px(43)) / (f4(i)) - ((Px(77) * U^2     + Px(69) * U * V     + 2 * Px(75) * U * W + Px(65) * U     + Px(76) * V^2     + 2 * Px(72) * V * W + Px(64) * V     + 3 * Px(78) * W^2 + 2 * Px(68) * W + Px(62)) * (f3(i))) / (f4(i))^2);
    end
    B_total(2 * i - 1, 3 * i - 2) = B(2 * i - 1, 1);
    B_total(2 * i - 1, 3 * i - 1) = B(2 * i - 1, 2);
    B_total(2 * i - 1, 3 * i    ) = B(2 * i - 1, 3);
    B_total(2 * i    , 3 * i - 2) = B(2 * i    , 1);
    B_total(2 * i    , 3 * i - 1) = B(2 * i    , 2);
    B_total(2 * i    , 3 * i    ) = B(2 * i    , 3);
end
    
    


